{"version":3,"sources":["components/Trend/Question.tsx","components/Trend/Selections.tsx","page/Trend/Trend.tsx"],"names":["Question","idx","QuestionWrapper","QuestionIndex","QuestionBox","Trend","question","score","Score","styled","div","Selections","route","dispatch","useDispatch","onUpdateTrendAnswer","useCallback","answer","updateTrendAnswer","questionIdx","SelectionsWrapper","to","style","textDecoration","Selection","onClick","selectionOne","selectionTwo","selectionThree","selectionFour","HomeButton","props","url","ButtonWrapper","SpaceButton","PreviousButton","TrendPage","TrendWrapper","Page","match","Number","params","history","useHistory","onLink","link","replace","Arrow","Home"],"mappings":"gPAQaA,EAAW,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IACzB,OACE,mCACE,eAACC,EAAD,WACE,eAACC,EAAD,WAAgBF,EAAM,EAAtB,YACA,eAACG,EAAD,WACGC,IAAMJ,GAAKK,SAAW,IAAMD,IAAMJ,GAAKM,MAD1C,YAGA,cAACC,EAAD,UAMFA,EAAQC,IAAOC,IAAV,0BAELR,EAAkBO,IAAOC,IAAV,4VAgBfN,EAAcK,IAAOC,IAAV,sGAOXP,EAAgBM,IAAOC,IAAV,oD,gCCrCNC,EAAa,SAAC,GAA6C,IAA3CV,EAA0C,EAA1CA,IACrBW,EAAgB,KAARX,EAAA,iCAAyCA,EAAM,GACvDY,EAAWC,cACXC,EAAsBC,uBAC1B,SAACC,EAAgBhB,GACfY,EAASK,YAAkB,CAAED,SAAQE,YAAalB,OAEpD,CAACY,IAEH,OACE,mCACE,eAACO,EAAD,WACE,cAAC,IAAD,CAAMC,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,EAAoB,EAAGd,IAAjD,SACGI,IAAMJ,GAAKyB,iBAGhB,cAAC,IAAD,CAAML,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,EAAoB,EAAGd,IAAjD,SACGI,IAAMJ,GAAK0B,iBAGhB,cAAC,IAAD,CAAMN,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,EAAoB,EAAGd,IAAjD,SACGI,IAAMJ,GAAK2B,mBAGhB,cAAC,IAAD,CAAMP,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,EAAoB,EAAGd,IAAjD,SACGI,IAAMJ,GAAK4B,wBAQlBT,EAAoBX,IAAOC,IAAV,+MAWjBc,EAAYf,IAAOC,IAAV,2T,gBCZToB,EAAarB,IAAOC,IAAV,sKAOU,SAACqB,GAAD,OAAkBA,EAAMC,OAG5CC,EAAgBxB,IAAOC,IAAV,8JASbwB,EAAczB,IAAOC,IAAV,6DAKXyB,EAAiB1B,IAAOC,IAAV,sKAOM,SAACqB,GAAD,OAAkBA,EAAMC,OAG5CI,EAAY3B,IAAOC,IAAV,4FAMT2B,EAAe5B,IAAOC,IAAV,gLAUH4B,UAlFF,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,MACRtC,EAAcuC,OAAOD,EAAME,OAAOxC,KAClCW,EAAgB,IAARX,EAAA,wBAA+BA,EAAM,GAC7CyC,EAAUC,cACVC,EAAS5B,uBACb,SAAC6B,GACCH,EAAQI,QAAQD,KAElB,CAACH,IAGH,OACE,mCACE,eAACN,EAAD,WACE,cAAC,IAAD,IACA,eAACC,EAAD,WACE,cAAC,EAAD,CAAUpC,IAAKA,IACf,cAAC,EAAD,CAAYA,IAAKA,OAEnB,eAACgC,EAAD,WACE,cAACE,EAAD,CACEV,QAAS,kBAAMmB,EAAOhC,IACtBoB,IAAKe,MAEP,cAACjB,EAAD,CAAYL,QAAS,kBAAMmB,EAAO,UAAUZ,IAAKgB,MACjD,cAACd,EAAD","file":"static/js/14.200583e0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Trend } from \"../../common/Questions\";\n\ninterface IQuestion {\n  idx: number;\n}\n\nexport const Question = ({ idx }: IQuestion): React.ReactElement => {\n  return (\n    <>\n      <QuestionWrapper>\n        <QuestionIndex>{idx + 1}번</QuestionIndex>\n        <QuestionBox>\n          {Trend[idx].question + \" \" + Trend[idx].score}점\n        </QuestionBox>\n        <Score></Score>\n      </QuestionWrapper>\n    </>\n  );\n};\n\nconst Score = styled.div``;\n\nconst QuestionWrapper = styled.div`\n  width: 100%;\n  height: 10rem;\n  padding-left: 5px;\n  padding-right: 5px;\n  background-color: #fff;\n  border-radius: 10px;\n  margin: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-family: \"AppleSDB\";\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n\nconst QuestionBox = styled.div`\n  margin-bottom: 1rem;\n  white-space: pre-line;\n\n  font-size: 1.2rem;\n`;\n\nconst QuestionIndex = styled.div`\n  margin-bottom: 1rem;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { Trend } from \"../../common/Selections\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTrendAnswer } from \"../../stores/trend/trend\";\ninterface ISelection {\n  idx: number;\n}\n\nexport const Selections = ({ idx }: ISelection): React.ReactElement => {\n  const route = idx === 11 ? `/result/trend` : `/trend/${idx + 1}`;\n  const dispatch = useDispatch();\n  const onUpdateTrendAnswer = useCallback(\n    (answer: number, idx: number) => {\n      dispatch(updateTrendAnswer({ answer, questionIdx: idx }));\n    },\n    [dispatch]\n  );\n  return (\n    <>\n      <SelectionsWrapper>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateTrendAnswer(1, idx)}>\n            {Trend[idx].selectionOne}\n          </Selection>\n        </Link>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateTrendAnswer(2, idx)}>\n            {Trend[idx].selectionTwo}\n          </Selection>\n        </Link>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateTrendAnswer(3, idx)}>\n            {Trend[idx].selectionThree}\n          </Selection>\n        </Link>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateTrendAnswer(4, idx)}>\n            {Trend[idx].selectionFour}\n          </Selection>\n        </Link>\n      </SelectionsWrapper>\n    </>\n  );\n};\n\nconst SelectionsWrapper = styled.div`\n  width: 100%;\n  height: 50%;\n  margin: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  font-family: \"AppleSDB\";\n`;\n\nconst Selection = styled.div`\n  width: 100%;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  color: #000;\n  padding: 5px;\n  cursor: pointer;\n  height: 2.5rem;\n  display: flex;\n  flex-direction: column;\n  white-space: pre-line;\n  justify-content: center;\n  background-color: #fff;\n  border-radius: 10px;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\nimport { Header } from \"../../components/Main\";\nimport { Question } from \"../../components/Trend/Question\";\nimport { Selections } from \"../../components/Trend/Selections\";\nimport Home from \"../../style/image/home.png\";\nimport Arrow from \"../../style/image/left-arrow.png\";\n\ntype TParams = { idx: string };\n\ninterface IHome {\n  url: string;\n}\nconst Page = ({ match }: RouteComponentProps<TParams>): React.ReactElement => {\n  const idx: number = Number(match.params.idx);\n  const route = idx === 0 ? `/main` : `/mbti/${idx - 1}`;\n  const history = useHistory();\n  const onLink = useCallback(\n    (link: string) => {\n      history.replace(link);\n    },\n    [history]\n  );\n\n  return (\n    <>\n      <TrendPage>\n        <Header />\n        <TrendWrapper>\n          <Question idx={idx} />\n          <Selections idx={idx} />\n        </TrendWrapper>\n        <ButtonWrapper>\n          <PreviousButton\n            onClick={() => onLink(route)}\n            url={Arrow}\n          ></PreviousButton>\n          <HomeButton onClick={() => onLink(\"/main\")} url={Home}></HomeButton>\n          <SpaceButton></SpaceButton>\n        </ButtonWrapper>\n      </TrendPage>\n    </>\n  );\n};\n\nconst HomeButton = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n\n  background-image: url(${(props: IHome) => props.url});\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  width: 70%;\n  justify-content: space-between;\n  margin: auto;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n\nconst SpaceButton = styled.div`\n  width: 30px;\n  height: 30px;\n`;\n\nconst PreviousButton = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n\n  background-image: url(${(props: IHome) => props.url});\n`;\n\nconst TrendPage = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f2f0f0;\n`;\n\nconst TrendWrapper = styled.div`\n  width: 70%;\n  height: 70%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin-top: 5rem;\n`;\n\nexport default Page;\n"],"sourceRoot":""}