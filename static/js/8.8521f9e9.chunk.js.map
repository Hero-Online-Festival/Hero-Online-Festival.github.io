{"version":3,"sources":["components/MBTI/Question.tsx","components/MBTI/Selections.tsx","page/MBTI/MBTI.tsx"],"names":["Question","idx","QuestionWrapper","QuestionIndex","QuestionBox","MBTI","question","styled","div","Selections","route","dispatch","useDispatch","onUpdateMBTIAnswer","useCallback","answer","updateMBTIAnswer","questionIdx","SelectionsWrapper","to","style","textDecoration","Selection","onClick","selectionOne","selectionTwo","ButtonWrapper","SpaceButton","PreviousButton","props","url","HomeButton","MBTIPage","MBTIWrapper","Page","match","Number","params","history","useHistory","onLink","link","replace","Arrow","Home"],"mappings":"6OAQaA,EAAW,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IACzB,OACE,mCACE,eAACC,EAAD,WACE,eAACC,EAAD,WAAgBF,EAAM,EAAtB,YACA,cAACG,EAAD,UAAcC,IAAKJ,GAAKK,iBAM1BJ,EAAkBK,IAAOC,IAAV,gUAefJ,EAAcG,IAAOC,IAAV,sGAOXL,EAAgBI,IAAOC,IAAV,oD,gCC9BNC,EAAa,SAAC,GAA6C,IAA3CR,EAA0C,EAA1CA,IACrBS,EAAgB,KAART,EAAA,+BAAuCA,EAAM,GACrDU,EAAWC,cACXC,EAAqBC,uBACzB,SAACC,EAAgBd,GACfU,EAASK,YAAiB,CAAED,SAAQE,YAAahB,OAEnD,CAACU,IAEH,OACE,mCACE,eAACO,EAAD,WACE,cAAC,IAAD,CAAMC,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,EAAmB,EAAGZ,IAAhD,SACGI,IAAKJ,GAAKuB,iBAGf,cAAC,IAAD,CAAML,GAAIT,EAAOU,MAAO,CAAEC,eAAgB,QAA1C,SACE,cAACC,EAAD,CAAWC,QAAS,kBAAMV,GAAoB,EAAGZ,IAAjD,SACGI,IAAKJ,GAAKwB,uBAQjBP,EAAoBX,IAAOC,IAAV,+MAWjBc,EAAYf,IAAOC,IAAV,yT,gBCHTkB,EAAgBnB,IAAOC,IAAV,iHAObmB,EAAcpB,IAAOC,IAAV,8EAMXoB,EAAiBrB,IAAOC,IAAV,sKAOM,SAACqB,GAAD,OAAkBA,EAAMC,OAG5CC,EAAaxB,IAAOC,IAAV,sKAOU,SAACqB,GAAD,OAAkBA,EAAMC,OAG5CE,EAAWzB,IAAOC,IAAV,4FAMRyB,EAAc1B,IAAOC,IAAV,gLASF0B,UA/EF,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,MACRlC,EAAcmC,OAAOD,EAAME,OAAOpC,KAClCS,EAAgB,IAART,EAAA,wBAA+BA,EAAM,GAC7CqC,EAAUC,cACVC,EAAS1B,uBACb,SAAC2B,GACCH,EAAQI,QAAQD,KAElB,CAACH,IAEH,OACE,mCACE,eAACN,EAAD,WACE,cAAC,IAAD,IACA,eAACC,EAAD,WACE,cAAC,EAAD,CAAUhC,IAAKA,IACf,cAAC,EAAD,CAAYA,IAAKA,OAEnB,eAACyB,EAAD,WACE,cAACE,EAAD,CACEL,QAAS,kBAAMiB,EAAO9B,IACtBoB,IAAKa,MAEP,cAACZ,EAAD,CAAYR,QAAS,kBAAMiB,EAAO,UAAUV,IAAKc,MACjD,cAACjB,EAAD","file":"static/js/8.8521f9e9.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { MBTI } from \"../../common/Questions\";\n\ninterface IQuestion {\n  idx: number;\n}\n\nexport const Question = ({ idx }: IQuestion): React.ReactElement => {\n  return (\n    <>\n      <QuestionWrapper>\n        <QuestionIndex>{idx + 1}ë²ˆ</QuestionIndex>\n        <QuestionBox>{MBTI[idx].question}</QuestionBox>\n      </QuestionWrapper>\n    </>\n  );\n};\n\nconst QuestionWrapper = styled.div`\n  width: 100%;\n  height: 10rem;\n  padding: 5px;\n  background-color: #fff;\n  border-radius: 10px;\n  margin: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-family: \"AppleSDB\";\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n\nconst QuestionBox = styled.div`\n  margin-bottom: 1rem;\n  white-space: pre-line;\n\n  font-size: 1.2rem;\n`;\n\nconst QuestionIndex = styled.div`\n  margin-bottom: 1rem;\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { MBTI } from \"../../common/Selections\";\nimport { useDispatch } from \"react-redux\";\nimport { updateMBTIAnswer } from \"../../stores/mbti/mbti\";\n\ninterface ISelection {\n  idx: number;\n}\n\nexport const Selections = ({ idx }: ISelection): React.ReactElement => {\n  const route = idx === 11 ? `/result/mbti` : `/mbti/${idx + 1}`;\n  const dispatch = useDispatch();\n  const onUpdateMBTIAnswer = useCallback(\n    (answer: number, idx: number) => {\n      dispatch(updateMBTIAnswer({ answer, questionIdx: idx }));\n    },\n    [dispatch]\n  );\n  return (\n    <>\n      <SelectionsWrapper>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateMBTIAnswer(1, idx)}>\n            {MBTI[idx].selectionOne}\n          </Selection>\n        </Link>\n        <Link to={route} style={{ textDecoration: \"none\" }}>\n          <Selection onClick={() => onUpdateMBTIAnswer(-1, idx)}>\n            {MBTI[idx].selectionTwo}\n          </Selection>\n        </Link>\n      </SelectionsWrapper>\n    </>\n  );\n};\n\nconst SelectionsWrapper = styled.div`\n  width: 100%;\n  height: 40%;\n  margin: auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  font-family: \"AppleSDB\";\n`;\n\nconst Selection = styled.div`\n  white-space: pre-line;\n  width: 100%;\n  padding: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  color: #000;\n  cursor: pointer;\n  height: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #fff;\n  border-radius: 10px;\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useCallback } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\nimport { Header } from \"../../components/Main\";\nimport { Question } from \"../../components/MBTI/Question\";\nimport { Selections } from \"../../components/MBTI/Selections\";\nimport Home from \"../../style/image/home.png\";\nimport Arrow from \"../../style/image/left-arrow.png\";\ntype TParams = { idx: string };\n\ninterface IHome {\n  url: string;\n}\n\nconst Page = ({ match }: RouteComponentProps<TParams>): React.ReactElement => {\n  const idx: number = Number(match.params.idx);\n  const route = idx === 0 ? `/main` : `/mbti/${idx - 1}`;\n  const history = useHistory();\n  const onLink = useCallback(\n    (link: string) => {\n      history.replace(link);\n    },\n    [history]\n  );\n  return (\n    <>\n      <MBTIPage>\n        <Header />\n        <MBTIWrapper>\n          <Question idx={idx} />\n          <Selections idx={idx} />\n        </MBTIWrapper>\n        <ButtonWrapper>\n          <PreviousButton\n            onClick={() => onLink(route)}\n            url={Arrow}\n          ></PreviousButton>\n          <HomeButton onClick={() => onLink(\"/main\")} url={Home}></HomeButton>\n          <SpaceButton></SpaceButton>\n        </ButtonWrapper>\n      </MBTIPage>\n    </>\n  );\n};\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  width: 70%;\n  justify-content: space-between;\n  margin: auto;\n`;\n\nconst SpaceButton = styled.div`\n  width: 30px;\n  height: 30px;\n  padding: 5px;\n`;\n\nconst PreviousButton = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n\n  background-image: url(${(props: IHome) => props.url});\n`;\n\nconst HomeButton = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n  width: 30px;\n  height: 30px;\n  background-size: cover;\n\n  background-image: url(${(props: IHome) => props.url});\n`;\n\nconst MBTIPage = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #f2f0f0;\n`;\n\nconst MBTIWrapper = styled.div`\n  width: 70%;\n  height: 60%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin-top: 5rem;\n`;\nexport default Page;\n"],"sourceRoot":""}