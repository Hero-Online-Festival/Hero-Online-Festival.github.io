{"version":3,"sources":["components/Trend/Result/Main.tsx","components/Trend/Result/Sub.tsx","page/Trend/Result/Result.tsx"],"names":["Main","score","MainWrapper","Title","Trend","title","SubTitle","color","subTitle","Score","MainImage","styled","div","props","image","Sub","SubWrapper","Item","item","Description","description","Page","history","useHistory","dispatch","useDispatch","onLinkTo","useCallback","initTrendAnswer","replace","trendResult","useSelector","state","TrendReducer","TrendScorePermute","answers","ResultPage","ResultWrapper","ApplyButton","onClick","window","open","MainButton"],"mappings":"8QAYaA,EAAO,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MACrB,OACE,mCACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAQC,IAAMH,GAAOI,QACrB,cAACC,EAAD,CAAUC,MAAOH,IAAMH,GAAOM,MAA9B,SAAsCH,IAAMH,GAAOO,WACnD,cAACC,EAAD,UAAQL,IAAMH,GAAOA,QACrB,cAACS,EAAD,CAAWT,MAAOA,UAMpBS,EAAYC,IAAOC,IAAV,yLACW,SAACC,GAAD,OAAsBT,IAAMS,EAAMZ,OAAOa,SAQ7DZ,EAAcS,IAAOC,IAAV,yGAOXT,EAAQQ,IAAOC,IAAV,qGAMLN,EAAWK,IAAOC,IAAV,uIAIkB,SAACC,GAAD,OAAWA,EAAMN,SAG3CE,EAAQE,IAAOC,IAAV,+EC9CEG,EAAM,SAAC,GAAyC,IAAvCd,EAAsC,EAAtCA,MACpB,OACE,mCACE,eAACe,EAAD,WACE,eAACC,EAAD,mCAAab,IAAMH,GAAOiB,QAC1B,cAACC,EAAD,CAAaZ,MAAOH,IAAMH,GAAOM,MAAjC,SACGH,IAAMH,GAAOmB,oBAOlBJ,EAAaL,IAAOC,IAAV,yJASVO,EAAcR,IAAOC,IAAV,6RAQK,SAACC,GAAD,OAAWA,EAAMN,SAQjCU,EAAON,IAAOC,IAAV,oI,+BCnCGS,EAAO,WAClB,IAAMC,EAAUC,cACVC,EAAWC,cAEXC,EAAWC,uBAAY,WAC3BH,EAASI,YAAgB,KACzBN,EAAQO,QAAQ,WACf,CAACP,IAEEQ,EAAcC,aAClB,SAACC,GAAD,OAAWA,EAAMC,gBAGbhC,EAAQiC,YAAkBJ,EAAYK,SAC5C,OACE,mCACE,eAACC,EAAD,WACE,cAAC,IAAD,IACA,eAACC,EAAD,WACE,cAAC,EAAD,CAAMpC,MAAOA,IACb,cAAC,EAAD,CAAKA,MAAOA,OAEd,cAACqC,EAAD,CACEC,QAAS,WACPC,OAAOC,KAAK,6BAFhB,yDAOA,cAACC,EAAD,CAAYH,QAASb,EAArB,qEAMFY,EAAc3B,IAAOC,IAAV,wTAgBXwB,EAAazB,IAAOC,IAAV,2HAOVyB,EAAgB1B,IAAOC,IAAV,oRAYb8B,EAAa/B,IAAOC,IAAV,kVAkBDS","file":"static/js/13.b7d27c0c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Trend } from \"../../../common/Result\";\n\ninterface IMain {\n  score: number;\n}\n\ntype MainImage = {\n  score: number;\n};\n\nexport const Main = ({ score }: IMain): React.ReactElement => {\n  return (\n    <>\n      <MainWrapper>\n        <Title>{Trend[score].title}</Title>\n        <SubTitle color={Trend[score].color}>{Trend[score].subTitle}</SubTitle>\n        <Score>{Trend[score].score}</Score>\n        <MainImage score={score} />\n      </MainWrapper>\n    </>\n  );\n};\n\nconst MainImage = styled.div`\n  background-image: url(${(props: MainImage) => Trend[props.score].image});\n  background-size: cover;\n  background-repeat: none;\n  margin: auto;\n  width: 6rem;\n  height: 6rem;\n  margin-top: 1rem;\n`;\nconst MainWrapper = styled.div`\n  width: fit-content;\n  height: 20%;\n  margin: auto;\n  margin-top: 2rem;\n`;\n\nconst Title = styled.div`\n  font-family: \"AppleSDM\";\n  font-size: 0.9rem;\n  text-align: center;\n`;\n\nconst SubTitle = styled.div`\n  font-family: \"AppleSDB\";\n  font-size: 2rem;\n  text-align: center;\n  box-shadow: inset 0 -20px 0 ${(props) => props.color};\n`;\n\nconst Score = styled.div`\n  font-family: \"AppleSDM\";\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { MBTIType, Trend } from \"../../../common/Result\";\n\ninterface ISub {\n  score: number;\n}\n\nexport const Sub = ({ score }: ISub): React.ReactElement => {\n  return (\n    <>\n      <SubWrapper>\n        <Item>필수템 : {Trend[score].item}</Item>\n        <Description color={Trend[score].color}>\n          {Trend[score].description}\n        </Description>\n      </SubWrapper>\n    </>\n  );\n};\n\nconst SubWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n  max-height: 50%;\n  margin: auto;\n  justify-content: center;\n`;\n\nconst Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 1rem;\n  margin: auto;\n  margin-top: 1rem;\n  background-color: ${(props) => props.color};\n  border-radius: 10px;\n\n  font-size: 1rem;\n  margin-bottom: 0.9rem;\n  font-family: \"AppleSDM\";\n`;\n\nconst Item = styled.div`\n  text-align: center;\n  font-size: 1rem;\n  width: 100%;\n  margin: auto;\n  font-family: \"AppleSDB\";\n`;\n","import React, { useCallback } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Header } from \"../../../components/Main\";\nimport { Main } from \"../../../components/Trend/Result/Main\";\nimport { Sub } from \"../../../components/Trend/Result/Sub\";\nimport { initTrendAnswer, TTrend } from \"../../../stores/trend/trend\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReducerType } from \"../../../stores/rootReducer\";\nimport { TrendScorePermute } from \"../../../common/Calculater\";\n\nexport const Page = (): React.ReactElement => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onLinkTo = useCallback(() => {\n    dispatch(initTrendAnswer({}));\n    history.replace(\"/main\");\n  }, [history]);\n\n  const trendResult = useSelector<ReducerType, TTrend>(\n    (state) => state.TrendReducer\n  );\n\n  const score = TrendScorePermute(trendResult.answers);\n  return (\n    <>\n      <ResultPage>\n        <Header />\n        <ResultWrapper>\n          <Main score={score} />\n          <Sub score={score} />\n        </ResultWrapper>\n        <ApplyButton\n          onClick={() => {\n            window.open(\"http://naver.me/FZJrFjLz\");\n          }}\n        >\n          이벤트 응모하기\n        </ApplyButton>\n        <MainButton onClick={onLinkTo}>메인으로 돌아가기</MainButton>\n      </ResultPage>\n    </>\n  );\n};\n\nconst ApplyButton = styled.div`\n  cursor: pointer;\n  width: 50%;\n  margin: auto;\n  height: 3rem;\n  margin-top: 2rem;\n  text-align: center;\n  border-radius: 10px;\n  font-family: \"AppleSDB\";\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background-color: #0765cd;\n`;\n\nconst ResultPage = styled.div`\n  width: 100%;\n  height: fit-content;\n  padding-bottom: 3rem;\n  background-color: #f2f0f0;\n`;\n\nconst ResultWrapper = styled.div`\n  background-color: #fff;\n  margin: auto;\n  width: 100%;\n  height: fit-content;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  margin-top: 3rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nconst MainButton = styled.div`\n  cursor: pointer;\n  width: 50%;\n  margin: auto;\n  height: 3rem;\n  margin-top: 1rem;\n  margin-bottom: 4rem;\n\n  text-align: center;\n  border-radius: 10px;\n  font-family: \"AppleSDB\";\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background-color: #0765cd;\n`;\n\nexport default Page;\n"],"sourceRoot":""}